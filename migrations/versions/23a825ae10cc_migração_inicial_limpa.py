"""migração inicial limpa

Revision ID: 23a825ae10cc
Revises: 
Create Date: 2025-06-11 20:42:53.038920

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '23a825ae10cc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Removidos os comandos de drop_table e drop_column para evitar erro
    # O upgrade agora só irá criar as tabelas novas
    pass

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role', sa.VARCHAR(length=20), server_default=sa.text("'user'::character varying"), autoincrement=False, nullable=False))

    op.create_table('atividade',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('data_lancamento', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('condominio_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('responsavel_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('criado_por_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('descricao', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('data_entrega', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('resolvida', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('motivo_desistencia', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('atividade', sa.VARCHAR(length=70), autoincrement=False, nullable=False),
    sa.Column('aprovado_por_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('motivo_correcao', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['aprovado_por_id'], ['user.id'], name='atividade_aprovado_por_id_fkey'),
    sa.ForeignKeyConstraint(['condominio_id'], ['condominio.id'], name='atividade_condominio_id_fkey'),
    sa.ForeignKeyConstraint(['criado_por_id'], ['user.id'], name='atividade_criado_por_id_fkey'),
    sa.ForeignKeyConstraint(['responsavel_id'], ['user.id'], name='atividade_responsavel_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='atividade_pkey')
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('email', name='user_email_key'),
    sa.UniqueConstraint('username', name='user_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('condominio',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('endereco', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('numero_apartamentos', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('data_entrada', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('sindico_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('administrador', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('contato', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['sindico_id'], ['user.id'], name='condominio_sindico_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='condominio_pkey')
    )
    op.create_table('mensagem',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('usuario_destino_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('usuario_remetente_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('assunto', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('corpo', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('lida', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('data_criacao', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['usuario_destino_id'], ['user.id'], name='mensagem_usuario_destino_id_fkey'),
    sa.ForeignKeyConstraint(['usuario_remetente_id'], ['user.id'], name='mensagem_usuario_remetente_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='mensagem_pkey')
    )
    # ### end Alembic commands ###
